/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ahospitalmanagment;

import actors.consultant;
import connections.consultantConnect;
import java.util.List;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Dinithi
 */
public class consultantView extends javax.swing.JFrame {

    /**
     * Creates new form consultantView
     */
    public consultantView() {
        initComponents();
        loadDataToTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldSearch = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButtonBack = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jButtonUpdate = new javax.swing.JButton();

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(220, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI Emoji", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 0, 153));
        jLabel1.setText("Consultants in our Nursing Home");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(174, 52, -1, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 51, 153));
        jLabel2.setText("Search  :");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 127, -1, -1));

        jTextFieldSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSearchActionPerformed(evt);
            }
        });
        jPanel1.add(jTextFieldSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 124, 323, -1));

        jTable1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 12)); // NOI18N
        jTable1.setForeground(new java.awt.Color(0, 51, 153));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Gender", "Specialization", "Charges ( for 1 hour )"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 164, 571, 343));

        jButtonBack.setBackground(new java.awt.Color(51, 0, 102));
        jButtonBack.setFont(new java.awt.Font("Segoe UI Historic", 1, 14)); // NOI18N
        jButtonBack.setForeground(new java.awt.Color(204, 204, 204));
        jButtonBack.setText("Back");
        jButtonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBackActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(577, 525, -1, -1));

        jButtonDelete.setBackground(new java.awt.Color(51, 0, 102));
        jButtonDelete.setFont(new java.awt.Font("Segoe UI Historic", 1, 14)); // NOI18N
        jButtonDelete.setForeground(new java.awt.Color(204, 204, 204));
        jButtonDelete.setText("Delete");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(477, 525, -1, -1));

        jButtonUpdate.setBackground(new java.awt.Color(51, 0, 102));
        jButtonUpdate.setFont(new java.awt.Font("Segoe UI Historic", 1, 14)); // NOI18N
        jButtonUpdate.setForeground(new java.awt.Color(204, 204, 204));
        jButtonUpdate.setText("Update");
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(375, 525, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 750, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 605, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBackActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButtonBackActionPerformed

    private void jTextFieldSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSearchActionPerformed
        // TODO add your handling code here:
         String searchText = jTextFieldSearch.getText().toLowerCase(); // Get the search text and convert to lowercase
        consultantConnect ConsultantConnect = new consultantConnect();
        List<consultant> loadConsultant = ConsultantConnect.loadConsultant();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0); // Clear existing rows in the table

        boolean found = false; // Flag to check if any consultant is found
        for (consultant consultant : loadConsultant) {
            if (consultant.getName().toLowerCase().contains(searchText)
                    || consultant.getSpecialization().toLowerCase().contains(searchText)
                    || consultant.getGender().toLowerCase().contains(searchText)) {
                // Add the matching consultant to the table
                model.addRow(new Object[]{consultant.getName(), consultant.getGender(), consultant.getSpecialization(), consultant.getCharges()});
                found = true;
            }
        }
        if (!found) {
        // Show "Not Found" message
        javax.swing.JOptionPane.showMessageDialog(this, "Consultant not found.", "Search Result", javax.swing.JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jTextFieldSearchActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTable1.getSelectedRow();
    
    if (selectedRow == -1) {
        javax.swing.JOptionPane.showMessageDialog(this, "Please select a consultant to delete.");
        return;
    }
    
    int confirm = javax.swing.JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this consultant?", "Confirm Deletion", javax.swing.JOptionPane.YES_NO_OPTION);
    
    if (confirm == javax.swing.JOptionPane.YES_OPTION) {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        String consultantName = model.getValueAt(selectedRow, 0).toString(); // Get consultant name
        
        // Remove from database
        consultantConnect ConsultantConnect = new consultantConnect();
        boolean success = ConsultantConnect.deleteConsultant(consultantName);
        
        if (success) {
            model.removeRow(selectedRow); // Remove from table
            javax.swing.JOptionPane.showMessageDialog(this, "Consultant deleted successfully.");
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Error deleting consultant.");
        }
    }
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTable1.getSelectedRow();
    
    if (selectedRow == -1) {
        javax.swing.JOptionPane.showMessageDialog(this, "Please select a consultant to update.");
        return;
    }

    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    String consultantName = model.getValueAt(selectedRow, 0).toString(); // Get consultant name

    // Get updated values using input dialogs
    String newGender = javax.swing.JOptionPane.showInputDialog(this, "Enter Gender:", model.getValueAt(selectedRow, 1).toString());
    String newSpecialization = javax.swing.JOptionPane.showInputDialog(this, "Enter Specialization:", model.getValueAt(selectedRow, 2).toString());
    String newCharges = javax.swing.JOptionPane.showInputDialog(this, "Enter Charges:", model.getValueAt(selectedRow, 3).toString());

    // Validate inputs
    if (newGender == null || newSpecialization == null || newCharges == null) {
        javax.swing.JOptionPane.showMessageDialog(this, "Update canceled.");
        return;
    }

    try {
        double charges = Double.parseDouble(newCharges); // Ensure it's a valid number

        // Update in file
        consultantConnect ConsultantConnect = new consultantConnect();
        boolean success = ConsultantConnect.updateConsultantFile(consultantName, newGender, newSpecialization, charges);

        if (success) {
            // Update in table
            model.setValueAt(newGender, selectedRow, 1);
            model.setValueAt(newSpecialization, selectedRow, 2);
            model.setValueAt(charges, selectedRow, 3);
            javax.swing.JOptionPane.showMessageDialog(this, "Consultant updated successfully.");
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Error updating consultant.");
        }
    } catch (NumberFormatException e) {
        javax.swing.JOptionPane.showMessageDialog(this, "Invalid charge amount. Please enter a number.");
    }
    }//GEN-LAST:event_jButtonUpdateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(consultantView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(consultantView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(consultantView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(consultantView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new consultantView().setVisible(true);
            }
        });
    }
    
    private void loadDataToTable() {
        consultantConnect ConsultantConnect = new consultantConnect();
        List<consultant> loadConsultant = ConsultantConnect.loadConsultant();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0); // Clear existing rows in the table

        // Add each consultant to the table
        for (consultant consultant : loadConsultant) {
            model.addRow(new Object[]{consultant.getName(), consultant.getGender(), consultant.getSpecialization(), consultant.getCharges()});
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBack;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextFieldSearch;
    // End of variables declaration//GEN-END:variables
}
